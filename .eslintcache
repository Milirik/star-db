[{"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\index.js":"1","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\app\\index.js":"2","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\app\\app.js":"3","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-list\\index.js":"4","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\random-planet\\index.js":"5","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\planet-details\\index.js":"6","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\starship-details\\index.js":"7","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\header\\index.js":"8","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-list\\item-list.js":"9","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\planet-details\\planet-details.js":"10","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\starship-details\\starship-details.js":"11","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\header\\header.js":"12","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\random-planet\\random-planet.js":"13","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\services\\swapi-service.js":"14","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\spinner\\index.js":"15","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\spinner\\spinner.js":"16","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-indicator\\index.js":"17","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-indicator\\error-indicator.js":"18","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-button\\index.js":"19","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-button\\error-button.js":"20","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\people-page\\people-page.js":"21","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-boundry\\error-boundry.js":"22","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\row\\row.js":"23","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-details\\index.js":"24","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-details\\item-details.js":"25","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-boundry\\index.js":"26","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\hoc-helpers\\index.js":"27","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\hoc-helpers\\with-data.js":"28"},{"size":165,"mtime":1611313176169,"results":"29","hashOfConfig":"30"},{"size":49,"mtime":1611313176155,"results":"31","hashOfConfig":"30"},{"size":2094,"mtime":1611313176155,"results":"32","hashOfConfig":"30"},{"size":65,"mtime":1611313176163,"results":"33","hashOfConfig":"30"},{"size":77,"mtime":1611313176166,"results":"34","hashOfConfig":"30"},{"size":78,"mtime":1611763178378,"results":"35","hashOfConfig":"30"},{"size":84,"mtime":1611763208769,"results":"36","hashOfConfig":"30"},{"size":56,"mtime":1611313176160,"results":"37","hashOfConfig":"30"},{"size":724,"mtime":1611313176164,"results":"38","hashOfConfig":"30"},{"size":0,"mtime":1611764089424,"results":"39","hashOfConfig":"30"},{"size":0,"mtime":1611763986691,"results":"40","hashOfConfig":"30"},{"size":517,"mtime":1611313176160,"results":"41","hashOfConfig":"30"},{"size":2375,"mtime":1611313176167,"results":"42","hashOfConfig":"30"},{"size":2632,"mtime":1611313176170,"results":"43","hashOfConfig":"30"},{"size":61,"mtime":1611313176168,"results":"44","hashOfConfig":"30"},{"size":271,"mtime":1611313176169,"results":"45","hashOfConfig":"30"},{"size":83,"mtime":1611313176159,"results":"46","hashOfConfig":"30"},{"size":476,"mtime":1611313176159,"results":"47","hashOfConfig":"30"},{"size":74,"mtime":1611313176157,"results":"48","hashOfConfig":"30"},{"size":461,"mtime":1611313176157,"results":"49","hashOfConfig":"30"},{"size":1033,"mtime":1611313176165,"results":"50","hashOfConfig":"30"},{"size":427,"mtime":1611313176156,"results":"51","hashOfConfig":"30"},{"size":306,"mtime":1611313176168,"results":"52","hashOfConfig":"30"},{"size":106,"mtime":1611313176162,"results":"53","hashOfConfig":"30"},{"size":1776,"mtime":1611313176163,"results":"54","hashOfConfig":"30"},{"size":77,"mtime":1611313176156,"results":"55","hashOfConfig":"30"},{"size":65,"mtime":1611313176161,"results":"56","hashOfConfig":"30"},{"size":616,"mtime":1611313176161,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a2523r",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\app\\index.js",[],["124","125"],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\app\\app.js",["126","127","128","129"],"import React, { Component } from 'react';\r\n\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet';\r\nimport ErrorBoundry from '../error-boundry';\r\n\r\nimport Row from \"../row/row\";\r\nimport ItemDetails, { Record } from \"../item-details/item-details\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\n\r\nimport ItemList from '../item-list';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    showRandomPlanet: true\r\n  };\r\n\r\n  toggleRandomPlanet = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        showRandomPlanet: !state.showRandomPlanet\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const planet = this.state.showRandomPlanet ?\r\n      <RandomPlanet/> :\r\n      null;\r\n\r\n    const { getPerson,\r\n            getStarship,\r\n            getPersonImage,\r\n            getStarshipImage,\r\n            getAllPeople,\r\n            getAllPlanets } = this.swapiService;\r\n\r\n    const personDetails = (\r\n      <ItemDetails\r\n        itemId={11}\r\n        getData={getPerson}\r\n        getImageUrl={getPersonImage} >\r\n\r\n        <Record field=\"gender\" label=\"Gender\" />\r\n        <Record field=\"eyeColor\" label=\"Eye Color\" />\r\n\r\n      </ItemDetails>\r\n    );\r\n\r\n    const starshipDetails = (\r\n      <ItemDetails\r\n        itemId={5}\r\n        getData={getStarship}\r\n        getImageUrl={getStarshipImage}>\r\n\r\n        <Record field=\"model\" label=\"Model\" />\r\n        <Record field=\"length\" label=\"Length\" />\r\n        <Record field=\"costInCredits\" label=\"Cost\" />\r\n      </ItemDetails>\r\n    );\r\n\r\n    return (\r\n      <ErrorBoundry>\r\n        <div className=\"stardb-app\">\r\n          <Header />\r\n\r\n          <ItemList\r\n            getData={getAllPeople}\r\n            onItemSelected={() => {}}>\r\n\r\n            { ({name}) => <span>{name}</span> }\r\n          </ItemList>\r\n\r\n          <ItemList\r\n            getData={getAllPlanets}\r\n            onItemSelected={() => {}}>\r\n\r\n            { ({name}) => <span>{name}</span> }\r\n          </ItemList>\r\n\r\n        </div>\r\n      </ErrorBoundry>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-list\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\random-planet\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\planet-details\\index.js",[],["130","131"],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\starship-details\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\header\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-list\\item-list.js",["132"],"import React, { Component } from 'react';\r\n\r\nimport './item-list.css';\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default class ItemList extends Component {\r\n\r\n    state =  {\r\n        itemList: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const { getData } = this.props;\r\n\r\n        getData()\r\n            .then((itemList) => {\r\n                this.setState({\r\n                    itemList\r\n                });\r\n            });\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map((item) => {\r\n            const {id} = item;\r\n\r\n            const label = this.props.children(item);\r\n\r\n            return (\r\n                <li className=\"list-group-item\"\r\n                    key={id}\r\n                    onClick={() => this.props.onItemSelected(id)}>\r\n                    {label}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.state;\r\n\r\n        if(!itemList){\r\n            return <Spinner/>\r\n        }\r\n\r\n        const items = this.renderItems(itemList)\r\n\r\n        return (\r\n            <ul className=\"item-list list-group\">\r\n                {items}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\planet-details\\planet-details.js",["133"],"import React, { Component } from 'react';\r\n\r\nimport './planet-details.css'\r\n\r\nexport default class PlanetDetails extends Component{\r\n\r\n}","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\starship-details\\starship-details.js",["134"],"import React, { Component } from 'react';\r\n\r\nimport './starship-details.css'\r\n\r\nexport default class StarshipDetails extends Component{\r\n\r\n}","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\header\\header.js",["135","136","137","138"],"import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n            <h3>\r\n                <a href=\"#\">\r\n                    Star DB\r\n                </a>\r\n            </h3>\r\n            <ul className=\"d-flex\">\r\n                <li>\r\n                    <a href=\"#\">People</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Planets</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Starships</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\random-planet\\random-planet.js",["139","140"],"import React, { Component } from 'react';\r\n\r\nimport SwapiService from \"../../services/swapi-service\";\r\n\r\nimport './random-planet.css';\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true\r\n    }\r\n\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n            error: false\r\n        });\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet();\r\n        this.interval = setInterval(this.updatePlanet, 1500)\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    updatePlanet  = () => {\r\n        console.log('update')\r\n        const id = Math.floor(Math.random()*25 + 2);\r\n        this.swapiService.getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n        const { planet, loading, error} = this.state;\r\n\r\n        const hasData = !(loading || error)\r\n\r\n        const errorMessage = error ? <ErrorIndicator/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = hasData ? <PlanetView planet={planet}/> : null;\r\n\r\n        return (\r\n            <div className=\"random-planet jumbotron rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst PlanetView = ({planet}) => {\r\n\r\n    const {id, name, population, rotationPeriod, diameter } = planet;\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"planet-image\"\r\n                 src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\r\n            <div>\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Population</span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Rotation Period</span>\r\n                        <span>{rotationPeriod}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Diameter</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n        ;\r\n}\r\n","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\services\\swapi-service.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\spinner\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\spinner\\spinner.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-indicator\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-indicator\\error-indicator.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-button\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-button\\error-button.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\people-page\\people-page.js",["141"],"\r\nimport React, {Component} from 'react'\r\nimport ItemList from \"../item-list\";\r\nimport ItemDetails from \"../item-details\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport ErrorButton from \"../error-button\";\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport ErrorBoundry from \"../error-boundry/error-boundry\";\r\nimport Row from \"../row/row\";\r\n\r\n\r\nexport default class PeoplePage extends Component{\r\n    swapiService = new SwapiService()\r\n\r\n    state = {\r\n        selectedPerson: 5,\r\n    }\r\n\r\n    onPersonSelected = (id) => {\r\n        this.setState({\r\n            selectedPerson: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return (<ErrorIndicator/>)\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList\r\n                onItemSelected={this.onPersonSelected}\r\n                getData={this.swapiService.getAllPeople}>\r\n\r\n                {(item) => (\r\n                    `${item.name} (${item.birthYear})`\r\n                )}\r\n\r\n            </ItemList>\r\n        )\r\n\r\n        const personDetails = (\r\n            <ErrorBoundry>\r\n                <ItemDetails itemId={this.state.selectedPerson} />\r\n            </ErrorBoundry>\r\n        )\r\n\r\n        return (\r\n            <Row left={itemList} right={personDetails}/>\r\n        )\r\n    }\r\n}","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-boundry\\error-boundry.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\row\\row.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-details\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\item-details\\item-details.js",["142","143","144"],"import React, { Component } from 'react';\r\n\r\nimport './person-details.css';\r\nimport SwapiService from \"../../services/swapi-service\";\r\n\r\nexport default class ItemDetails extends Component {\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        item: null,\r\n        image: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateItem()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.itemId != prevProps.itemId){\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    updateItem(){\r\n        const {itemId, getData, getImageUrl} = this.props;\r\n        if(!itemId){\r\n            return;\r\n        }\r\n        getData(itemId)\r\n            .then((item) => {\r\n                this.setState({\r\n                    item,\r\n                    image: getImageUrl(item)\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const{item, image} = this.state;\r\n        if(!item){\r\n            return <span>Select a person</span>\r\n        }\r\n\r\n\r\n        const {id, name, gender, birthYear, eyeColor } = item;\r\n\r\n        return (\r\n            <div className=\"person-details card\">\r\n                <img className=\"person-image\"\r\n                         src={image} />\r\n\r\n                <div className=\"card-body\">\r\n                    <h4>{name}</h4>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Gender</span>\r\n                            <span>{gender}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Birth Year</span>\r\n                            <span>{birthYear}</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Eye Color</span>\r\n                            <span>{eyeColor}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\error-boundry\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\hoc-helpers\\index.js",[],"C:\\Users\\Кирилл\\Desktop\\Git\\star-db\\src\\components\\hoc-helpers\\with-data.js",["145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":20},{"ruleId":"150","severity":1,"message":"154","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"155","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":19},{"ruleId":"150","severity":1,"message":"156","line":11,"column":8,"nodeType":"152","messageId":"153","endLine":11,"endColumn":18},{"ruleId":"146","replacedBy":"157"},{"ruleId":"148","replacedBy":"158"},{"ruleId":"150","severity":1,"message":"159","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":20},{"ruleId":"150","severity":1,"message":"160","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"160","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":9,"column":17,"nodeType":"163","endLine":9,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":15,"column":21,"nodeType":"163","endLine":15,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":18,"column":21,"nodeType":"163","endLine":18,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":21,"column":21,"nodeType":"163","endLine":21,"endColumn":33},{"ruleId":"164","severity":1,"message":"165","line":13,"column":5,"nodeType":"166","messageId":"167","endLine":15,"endColumn":6},{"ruleId":"168","severity":1,"message":"169","line":82,"column":13,"nodeType":"163","endLine":83,"endColumn":89},{"ruleId":"150","severity":1,"message":"155","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":19,"column":30,"nodeType":"172","messageId":"173","endLine":19,"endColumn":32},{"ruleId":"150","severity":1,"message":"174","line":45,"column":16,"nodeType":"152","messageId":"153","endLine":45,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":49,"column":17,"nodeType":"163","endLine":50,"endColumn":40},{"ruleId":"150","severity":1,"message":"175","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":22},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'RandomPlanet' is defined but never used.","Identifier","unusedVar","'ItemList' is defined but never used.","'ErrorButton' is defined but never used.","'PeoplePage' is defined but never used.",["176"],["177"],"'SwapiService' is defined but never used.","'React' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","'ErrorIndicator' is defined but never used.","no-global-assign","no-unsafe-negation"]